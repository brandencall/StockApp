/*
Deployment script for StockDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "StockDB"
:setvar DefaultFilePrefix "StockDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[CurrencyPerShareValues]...';


GO
CREATE TABLE [dbo].[CurrencyPerShareValues] (
    [Id]              INT             IDENTITY (1, 1) NOT NULL,
    [Value]           DECIMAL (18, 4) NOT NULL,
    [FinancialFactId] INT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CurrencyValues]...';


GO
CREATE TABLE [dbo].[CurrencyValues] (
    [Id]              INT   IDENTITY (1, 1) NOT NULL,
    [Value]           MONEY NOT NULL,
    [FinancialFactId] INT   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[FinancialAttributes]...';


GO
CREATE TABLE [dbo].[FinancialAttributes] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [Title]       NVARCHAR (500)  NOT NULL,
    [Label]       NVARCHAR (1000) NULL,
    [Description] NVARCHAR (MAX)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[FinancialFacts]...';


GO
CREATE TABLE [dbo].[FinancialFacts] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [UnitId]       INT           NOT NULL,
    [StartDate]    DATE          NULL,
    [EndDate]      DATE          NULL,
    [FiscalYear]   NCHAR (4)     NULL,
    [FiscalPeriod] NCHAR (2)     NULL,
    [Form]         NVARCHAR (15) NULL,
    [Filed]        DATE          NULL,
    [Frame]        NVARCHAR (9)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ShareValues]...';


GO
CREATE TABLE [dbo].[ShareValues] (
    [Id]              INT IDENTITY (1, 1) NOT NULL,
    [Value]           INT NOT NULL,
    [FinancialFactId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[StockFinances]...';


GO
CREATE TABLE [dbo].[StockFinances] (
    [Id]                   INT IDENTITY (1, 1) NOT NULL,
    [StockId]              INT NOT NULL,
    [FinancialAttributeId] INT NOT NULL,
    [FinancialFactId]      INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Stocks]...';


GO
CREATE TABLE [dbo].[Stocks] (
    [Id]     INT            IDENTITY (1, 1) NOT NULL,
    [CIK]    CHAR (10)      NOT NULL,
    [Ticker] NVARCHAR (20)  NOT NULL,
    [Name]   NVARCHAR (500) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Units]...';


GO
CREATE TABLE [dbo].[Units] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Type]           NVARCHAR (20) NOT NULL,
    [FinancialTable] NCHAR (30)    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_CurrencyPerShareValues_FinancialFacts]...';


GO
ALTER TABLE [dbo].[CurrencyPerShareValues]
    ADD CONSTRAINT [FK_CurrencyPerShareValues_FinancialFacts] FOREIGN KEY ([FinancialFactId]) REFERENCES [dbo].[FinancialFacts] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_CurrencyValues_FinancialFacts]...';


GO
ALTER TABLE [dbo].[CurrencyValues]
    ADD CONSTRAINT [FK_CurrencyValues_FinancialFacts] FOREIGN KEY ([FinancialFactId]) REFERENCES [dbo].[FinancialFacts] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FinancialFacts_Units]...';


GO
ALTER TABLE [dbo].[FinancialFacts]
    ADD CONSTRAINT [FK_FinancialFacts_Units] FOREIGN KEY ([UnitId]) REFERENCES [dbo].[Units] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ShareValues_FinancialFacts]...';


GO
ALTER TABLE [dbo].[ShareValues]
    ADD CONSTRAINT [FK_ShareValues_FinancialFacts] FOREIGN KEY ([FinancialFactId]) REFERENCES [dbo].[FinancialFacts] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_StockFinances_Stocks]...';


GO
ALTER TABLE [dbo].[StockFinances]
    ADD CONSTRAINT [FK_StockFinances_Stocks] FOREIGN KEY ([StockId]) REFERENCES [dbo].[Stocks] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_StockFinances_FinacialAttributes]...';


GO
ALTER TABLE [dbo].[StockFinances]
    ADD CONSTRAINT [FK_StockFinances_FinacialAttributes] FOREIGN KEY ([FinancialAttributeId]) REFERENCES [dbo].[FinancialAttributes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_StockFinances_FinancialFacts]...';


GO
ALTER TABLE [dbo].[StockFinances]
    ADD CONSTRAINT [FK_StockFinances_FinancialFacts] FOREIGN KEY ([FinancialFactId]) REFERENCES [dbo].[FinancialFacts] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spFinancialAttributes_Insert]...';


GO
CREATE PROCEDURE [dbo].[spFinancialAttributes_Insert]
	@title nvarchar(500),
	@label nvarchar(1000),
	@description nvarchar(MAX)
AS
begin
	set nocount on;

	if not exists (select 1 from dbo.FinancialAttributes where Title = @title)
	begin
		insert into dbo.FinancialAttributes (Title, Label, Description)
		values (@title, @label, @description)
	end

	select top 1 [Id], [Title], [Label], [Description]
	from dbo.FinancialAttributes
	where Title = @title
end
GO
PRINT N'Creating Procedure [dbo].[spFinancialFacts_Insert]...';


GO
CREATE PROCEDURE [dbo].[spFinancialFacts_Insert]
	@unitId int,
	@startDate date,
	@endDate date,
	@fiscalYear nchar(4),
	@fiscalPeriod nchar(2),
	@form nvarchar(15),
	@filed date,
	@frame nvarchar(9)
AS
begin 
	set nocount on;

	insert into dbo.FinancialFacts (UnitId, StartDate, EndDate, FiscalPeriod, FiscalPeriod, Form, Filed, Frame)
	values (@unitId, @startDate, @endDate, @fiscalYear, @fiscalPeriod, @form, @filed, @frame)

	select IDENT_CURRENT('dbo.FinancialFacts')
end
GO
PRINT N'Creating Procedure [dbo].[spStocks_GetbyCIK]...';


GO
CREATE PROCEDURE [dbo].[spStocks_GetbyCIK]
	@cik char(10)
AS
begin
	set nocount on;
	
	select top 1 [Id], [CIK], [Ticker], [Name]
	from dbo.Stocks 
	where CIK = @cik
end
GO
PRINT N'Creating Procedure [dbo].[spStocks_Insert]...';


GO
CREATE PROCEDURE [dbo].[spStocks_Insert]
	@cik char(10),
	@ticker nvarchar(20),
	@name nvarchar(500)
AS
begin
	set nocount on;
	if not exists (select 1 from dbo.Stocks where CIK = @cik)
	begin
		insert into dbo.Stocks (CIK, Ticker, Name)
		values (@cik, @ticker, @name);
	end
end
GO
PRINT N'Creating Procedure [dbo].[spUnitType_Insert]...';


GO
CREATE PROCEDURE [dbo].[spUnitType_Insert]
	@type nvarchar(20)
AS
begin
	set nocount on;

	if not exists (select 1 from dbo.Units where Type = @type)
	begin
		insert into dbo.Units (Type)
		values (@type)
	end

	select top 1 [Id], [Type]
	from dbo.Units
	where Type = @type
end
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1e311bfa-6e1d-47bd-9c49-f8ed1bc2fe98')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1e311bfa-6e1d-47bd-9c49-f8ed1bc2fe98')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '656d4bc0-e8dd-440a-9ea5-723c94b26c8b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('656d4bc0-e8dd-440a-9ea5-723c94b26c8b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4f77d707-2623-407c-b6a7-fabce0a7da3d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4f77d707-2623-407c-b6a7-fabce0a7da3d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6ccf3c72-7bf4-4e98-b31d-41ac7407cae0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6ccf3c72-7bf4-4e98-b31d-41ac7407cae0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ad2aa342-65c1-41fa-83e2-36c997805332')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ad2aa342-65c1-41fa-83e2-36c997805332')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0ea5060-0b85-46f0-a4f0-1aa1e1f43fd6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0ea5060-0b85-46f0-a4f0-1aa1e1f43fd6')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
